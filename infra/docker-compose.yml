version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: pricetrackr_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pricetrackr}
      POSTGRES_USER: ${POSTGRES_USER:-pricetrackr}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pricetrackr}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [stack]

  redis:
    image: redis:7-alpine
    container_name: pricetrackr_redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    networks: [stack]

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: pricetrackr_backend
    env_file:
      - ../.env
    depends_on: [postgres, redis]
    networks: [stack]
    expose: ["8000"]
    command: >
      sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"

  worker:
    build:
      context: ../worker
    container_name: pricetrackr_worker
    env_file:
      - ../.env
    depends_on: [redis, postgres]
    networks: [stack]
    command: ["python", "playwright_scraper/runner.py"]

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: pricetrackr_frontend
    env_file:
      - ../.env
    networks: [stack]
    expose: ["5173"]

  nginx:
    image: nginx:alpine
    container_name: pricetrackr_nginx
    depends_on: [frontend, backend]
    volumes:
      - ./nginx/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    networks: [stack]

volumes:
  pgdata:
  redisdata:

networks:
  stack:
    driver: bridge
